// <auto-generated />
using System;
using DataAccessLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLib.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20200722171331_InitialStep1")]
    partial class InitialStep1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccessLib.Enitity.Order", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            ID = new Guid("31568965-3cf6-4154-98e4-dba229b48afd"),
                            CreatedAt = new DateTime(2020, 7, 22, 13, 13, 30, 535, DateTimeKind.Local).AddTicks(4895),
                            OrderDate = new DateTime(2020, 7, 22, 13, 13, 30, 535, DateTimeKind.Local).AddTicks(4928),
                            Total = 200.0
                        },
                        new
                        {
                            ID = new Guid("e7e9cfbd-1264-4d82-9ed2-482ee877d3c0"),
                            CreatedAt = new DateTime(2020, 7, 22, 13, 13, 30, 535, DateTimeKind.Local).AddTicks(6073),
                            OrderDate = new DateTime(2020, 7, 22, 13, 13, 30, 535, DateTimeKind.Local).AddTicks(6092),
                            Total = 150.0
                        },
                        new
                        {
                            ID = new Guid("2442d361-70a3-4121-942b-4a314565c0d8"),
                            CreatedAt = new DateTime(2020, 7, 22, 13, 13, 30, 535, DateTimeKind.Local).AddTicks(6118),
                            OrderDate = new DateTime(2020, 7, 22, 13, 13, 30, 535, DateTimeKind.Local).AddTicks(6122),
                            Total = 50.0
                        });
                });

            modelBuilder.Entity("DataAccessLib.Enitity.OrderDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("DataAccessLib.Enitity.Product", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Maker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ID = new Guid("50f0cab0-86e8-4205-acfb-dc092e455c8d"),
                            CreatedAt = new DateTime(2020, 7, 22, 13, 13, 30, 531, DateTimeKind.Local).AddTicks(1138),
                            Maker = "SS",
                            Name = "Bat",
                            Price = 100.0
                        },
                        new
                        {
                            ID = new Guid("0fd43815-9fc7-4813-9c8c-4adc4ecc7861"),
                            CreatedAt = new DateTime(2020, 7, 22, 13, 13, 30, 534, DateTimeKind.Local).AddTicks(615),
                            Maker = "SS",
                            Name = "Ball",
                            Price = 6.0
                        },
                        new
                        {
                            ID = new Guid("48af6f4e-ebee-4aca-a473-8b4b2ae50e90"),
                            CreatedAt = new DateTime(2020, 7, 22, 13, 13, 30, 534, DateTimeKind.Local).AddTicks(686),
                            Maker = "SS",
                            Name = "Gloves",
                            Price = 10.0
                        });
                });

            modelBuilder.Entity("DataAccessLib.Enitity.ProductDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ProductID")
                        .IsUnique();

                    b.ToTable("ProductDetail");
                });

            modelBuilder.Entity("DataAccessLib.Enitity.ShippingInfo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderID")
                        .IsUnique();

                    b.ToTable("ShippingInfos");
                });

            modelBuilder.Entity("DataAccessLib.Enitity.OrderDetail", b =>
                {
                    b.HasOne("DataAccessLib.Enitity.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLib.Enitity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLib.Enitity.ProductDetail", b =>
                {
                    b.HasOne("DataAccessLib.Enitity.Product", "Product")
                        .WithOne("ProductDetail")
                        .HasForeignKey("DataAccessLib.Enitity.ProductDetail", "ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLib.Enitity.ShippingInfo", b =>
                {
                    b.HasOne("DataAccessLib.Enitity.Order", "Order")
                        .WithOne("ShippingInfo")
                        .HasForeignKey("DataAccessLib.Enitity.ShippingInfo", "OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
